Tema 2 PC

Nume si prenume: Dogaru Constantin
Timp alocat rezolvarii temei: 30 ore
Dificultate tema: 8.5
Detalii legate de implementare:

Pentru implementarea temei am pornit de la scheletul de cod din laboratorul 8 si am modificat clientul pentru ca acesta sa poata primi informatii atat de la tastatura, cat si de la server. Odata terminat scheletul de cod, mi-am creat doua headere: unul pentru erori si altul pentru structuri. In headerul pt erori mi-am definit o functie ce primeste ca parametru un integer si afiseaza atat pe ecran, cat si in fisierul log mesajul corespunzator codului erorii. In fisierul de structuri mi-am definit doua structuri ajutatoare: una pentru utilizatorii din users_config iar alta pentru informatiile din shares_config. Pentru fisierul de log, mi-am creat un string ce reprezinta userul curent si il actualizez la fiecare logare/delogare. De asemenea, pentru majoritatea comenzilor, acest string va fi trimis catre server pentru ca serverul sa stie cine a dat comanda respectiva.

Comenzi: (toate erorile sunt implementate conform cerintei deci nu mai are rost sa le detaliez)
login - trimit serverului datele de autentificare. Serverul le primeste, le parseaza si verifica daca datele respective se gasesc in fisierul users_config. In caz afirmativ, serverul trimite un mesaj de confirmare clientului iar acesta se logheaza ca si userul respectiv.

logout - in cazul in care cineva este logat deja in sistem, trimit serverului cererea de delogare, daca totul este in regula, serverul imi trimite inapoi un mesaj de confirmare si utilizatorul curent este delogat

getuserlist - clientul trimite o cerere catre server ca vrea lista cu toti utilizatorii din sistem. In cazul in care cererea e valida, serverul i-o ofera sub forma unui string, urmand ca clientul sa parseze stringul respectiv si sa afiseze userii atat pe ecran, cat si in fisierul log

getfilelist - Pentru listarea tuturor fisierelor dintr-un director am folosit readdir. (cod preluat de pe http://stackoverflow.com/questions/612097/how-can-i-get-the-list-of-files-in-a-directory-using-c-or-c). Pentru dimensiune am folosit functia stat, iar pentru starea lor, am parcurs vectorul de structuri de tip share si am verificat daca fisierul respectiv se afla sau nu in vector. Daca se afla inseamna ca e SHARE, in caz contrar e PRIVATE. Trimiterea inapoi catre client se realizeaza tot sub forma unui string, pe care acesta il va parcurge si va afisa informatiile

Download si upload au functionalitatea din cerinta, dar nu in totalitate. Nu se pot rula comenzi pana ce comanda actuala nu este finalizata. Mai exact, se pot rula oricat de multe comenzi, dar nu vor fi luate in considerare. Am testat pentru un fisier de 1GB iar timpul de copiere este in jur de 25s, ceea ce nu e un timp de asteptare foarte mare. In timpul asta utilizatorul isi poate desfasura alte activitati si sa revina la comunicarea cu serverul cand comanda este finalizata.

share - serverul adauga fisierul primit de la client in vector de structuri de tip share, asa ca data viitoare cand se va parcurge acest vector, vom sti ca fisierul respectiv este public. In cazul in care operatiunea a decurs fara probleme, se trimite un mesaj de succes clientului.

unshare - pe acelasi principiu, se cauta fisierul in vectorul de structuri si daca s-a gasit, se elimina.

delete - folosindu-ma de functia unlink, sterg fisierul. Totodata, daca fisierul se afla in lista de fisiere publice, il elimin si de acolo.

quit pentru client - trimit serverului intentia de a iesi din sistem, acesta imi trimite o confirmare si daca totul este in regula apelez exit(0)

quit pentru server - Apelez exit(0) pe server si instiintez toti clientii conectati de inchiderea serverului. Fiecare client asculta de la server prin urmatoarea linie de cod int n = recv(sockfd, buffer, BUFLEN, 0). In cazul in care n este 0, inseamna ca serverul a dat quit si se va afisa un mesaj corespunzator.

Nu stiu cum se va face testarea temei, mie local mi-a mers tot. Totusi, din cauza faptului ca am alocare de memorie statica e posibil ca unele teste sa fie prea mari si sa dea seg fault. Pentru orice problema legata de acest aspect, nu ezitati sa ma contactati.
